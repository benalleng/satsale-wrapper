id: lnbits 
title: "LNBits"
version: 0.9.2
release-notes: "Initial Release for EmbassyOS"
license: mit
wrapper-repo: "https://github.com/Start9Labs/lnbits-wrapper"
upstream-repo: "https://github.com/lnbits/lnbits-legend"
support-site: "https://github.com/lnbits/lnbits-legend/issues"
marketing-site: "https://lnbits.com/"
donation-url: "https://legend.lnbits.com/paywall/GAqKguK5S8f6w5VNjS9DfK"
build: ["make"]
description:
  short: Free and open-source lightning-network wallet/accounts system.
  long: |
    A very simple Python server that sits on top of any funding source, and can be used as an accounts system, extendable platform, development stack, fallback wallet or even instant wallet for LN demonstrations
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: /app/data
    lnd: /mnt/lnd
    c-lightning: "/mnt/c-lightning"
health-checks:
  web-ui:
    name: Web UI
    success-message: LNBits is ready to visit in a web browser
    type: script
config: 
  get:
    type: script
  set:
    type: script
properties:
  type: script
volumes:
  main:
    type: data
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: "/public"
    readonly: true
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: /shared
    readonly: true
interfaces:
  main:
    name: LNBits Web Interface
    description: Specifies the interface to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "5000"
    lan-config:
      443:
        ssl: true
        internal: 5000
    ui: true
    protocols:
      - tcp
      - http
dependencies:
  lnd:
    version: ">=0.14.3 <0.16.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: "opt-in"
      how: Use the LND instance by default
    config: ~
  c-lightning:
    version: ">=0.10.1 <0.14.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: "opt-in"
      how: Can opt to use the CLN instance instead of LND
    config: ~
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args: 
      - duplicity
      - create
      - /mnt/backup
      - /app/data/data
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/app/data/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /app/data/data
      - /mnt/backup
    mounts:
      BACKUP: "/mnt/backup"
      main: "/app/data/data"
migrations:
 from:
   "*":
     type: script
     args: ["from"]
 to:
   "*":
     type: script
     args: ["to"]
